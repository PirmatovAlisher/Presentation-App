@page "/presentations/{Nickname}"
@using Microsoft.EntityFrameworkCore
@inject IDbContextFactory<AppDbContext> DbFactory
@inject NavigationManager Navigation

<h3>Presentations</h3>
<div class="d-flex justify-content-between mb-3">
    <div></div>
    <button class="btn btn-success" @onclick="CreateNew">Create New Presentation</button>
</div>

@if (presentations == null)
{
    <p>Loading...</p>
}
else
{
    <div class="list-group">
        @foreach (var p in presentations)
        {
            <div class="list-group-item d-flex justify-content-between align-items-center">
                <div>
                    @p.Name
                    @if (p.CreatorName == Nickname)
                    {
                        <span class="badge bg-primary ms-2">Owner</span>
                    }
                </div>
                <button class="btn btn-sm btn-primary" @onclick="() => Join(p.Id)">Join</button>
            </div>
        }
    </div>
}

@code {
    [Parameter] public string Nickname { get; set; }
    private List<Presentation> presentations = new();

    protected override async Task OnInitializedAsync()
    {
        using var db = DbFactory.CreateDbContext();
        presentations = await db.Presentations.ToListAsync();
    }

    private async Task CreateNew()
    {
        using var db = DbFactory.CreateDbContext();
        var presentation = new Presentation
            {
                Name = $"{Nickname}'s Presentation",
                CreatorName = Nickname
            };
        db.Presentations.Add(presentation);
        await db.SaveChangesAsync();
        Join(presentation.Id);
    }

    private void Join(string id) => Navigation.NavigateTo($"/editor/{id}/{Nickname}");
}